//DemoApplication.java

package com.example.demo;
import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
@SpringBootApplication
public class DemoApplication {
 public static void main(String[] args) {
 SpringApplication.run(DemoApplication.class, args);
 }
}
//Book.java (Entity)

package com.example.demo.entity;
import jakarta.persistence.*;
@Entity
public class Book {
 @Id
 @GeneratedValue(strategy = GenerationType.IDENTITY)
 private Long id;
 private String title;
 private String author;
 public Long getId() { return id; }
 public void setId(Long id) { this.id = id; }
 public String getTitle() { return title; }
 public void setTitle(String title) { this.title = title; }
 public String getAuthor() { return author; }
 public void setAuthor(String author) { this.author = author; }
}
//BookRepository.java

package com.example.demo.repository;
import com.example.demo.entity.Book;
import org.springframework.data.jpa.repository.JpaRepository;
import java.util.List;
public interface BookRepository extends JpaRepository<Book, Long> {
 List<Book> findByAuthor(String author);
}
//BookController.java

package com.example.demo.controller;
import com.example.demo.entity.Book;
import com.example.demo.repository.BookRepository;
import org.springframework.web.bind.annotation.*;
import java.util.List;
@RestController
@RequestMapping("/books")
public class BookController {
 private final BookRepository repo;
 public BookController(BookRepository repo) {
 this.repo = repo;
 }
 @PostMapping
 public Book addBook(@RequestBody Book book) {
 return repo.save(book);
 }
 @GetMapping("/{id}")
 public Book getBookById(@PathVariable Long id) {
 return repo.findById(id).orElse(null);
 }
 @GetMapping
 public List<Book> getAllBooks() {
 return repo.findAll();
 }
 @GetMapping("/author/{author}")
 public List<Book> getBooksByAuthor(@PathVariable String author) {
 return repo.findByAuthor(author);
 }
 @DeleteMapping("/{id}")
 public void deleteBook(@PathVariable Long id) {
 repo.deleteById(id);
 }
}
//application.properties

spring.datasource.url=jdbc:h2:mem:testdb
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=update
