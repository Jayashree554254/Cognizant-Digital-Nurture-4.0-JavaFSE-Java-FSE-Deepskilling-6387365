/*Exercise 10: Implementing the MVC Pattern
Scenario: 
You are developing a simple web application for managing student records using the MVC pattern.
Steps:
1.	Create a New Java Project:
·	Create a new Java project named MVCPatternExample.
2.	Define Model Class:
·	Create a class Student with attributes like name, id, and grade.
3.	Define View Class:
·	Create a class StudentView with a method displayStudentDetails().
4.	Define Controller Class:
·	Create a class StudentController that handles the communication between the model and the view.
5.	Test the MVC Implementation:
·	Create a main class to demonstrate creating a Student, updating its details using StudentController, and displaying them using StudentView.

Solution:*/
package MVCPatternExample;
class Student {
    private String name;
    private String id;
    private String grade;

    public Student(String name, String id, String grade) {
        this.name = name; this.id = id; this.grade = grade;
    }

    public String getName() { return name; }
    public String getId() { return id; }
    public String getGrade() { return grade; }
    public void setName(String name) { this.name = name; }
    public void setGrade(String grade) { this.grade = grade; }
}
package MVCPatternExample;

class StudentView {
    public void displayStudentDetails(Student s) {
        System.out.println("Student: " + s.getName() + ", ID: " + s.getId() + ", Grade: " + s.getGrade());
    }
}

class StudentController {
    private Student model;
    private StudentView view;

    public StudentController(Student model, StudentView view) {
        this.model = model;
        this.view = view;
    }

    public void updateView() {
        view.displayStudentDetails(model);
    }

    public void setStudentName(String name) {
        model.setName(name);
    }
}
package MVCPatternExample;

public class MVCPatternTest {
	public static void main(String[] args) {
        Student student = new Student("Jayashree", "101", "A");
        StudentView view = new StudentView();
        StudentController controller = new StudentController(student, view);

        controller.updateView();
        controller.setStudentName("Jash");
        controller.updateView();
    }

}
Output:
Student: Jayashree, ID: 101, Grade: A
Student: Jash, ID: 101, Grade: A
 

